name: Client
on:
  push:
    paths:
      - 'client/**'
  pull_request:
jobs:
  build:
    name: Build, lint, and test the solarium client on Node ${{ matrix.node }} and ${{ matrix.os }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: ['16.x']
        os: [ubuntu-latest]

    defaults:
      run:
        working-directory: ./client

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Cache node dependencies
        uses: actions/cache@v2
        with:
          path: |
            ./client/node_modules
          key: yarn-client-${{ hashFiles('client/yarn.lock') }}

      - name: Install
        run: yarn install

      - name: Lint
        run: yarn lint

      - name: Test
        run: yarn test --ci --coverage --maxWorkers=2

      - name: Build
        run: yarn build

  E2E:
    name: Test the solarium client against the on-chain program on Solana ${{ matrix.solana }}, Node ${{ matrix.node }}, Rust ${{ matrix.rust }}, and ${{ matrix.os }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: ['16.x']
        os: [ubuntu-latest]
        solana: ['v1.7.6']
        rust: ['1.50']

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          profile: minimal

      - name: Cache build dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./program/target
          key: cargo-build-${{ hashFiles('program/Cargo.lock') }}

      - name: Cache Solana version
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache
          key: solana-${{ matrix.solana }}

      - name: Install Solana
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/${{ matrix.solana }}/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Build program
        uses: actions-rs/cargo@v1
        with:
          command: build-bpf
          args: --manifest-path program/Cargo.toml

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Cache node dependencies
        uses: actions/cache@v2
        with:
          path: |
            ./client/node_modules
          key: yarn-client-${{ hashFiles('client/yarn.lock') }}

      - name: Install client dependencies
        run: yarn install
        working-directory: client

      - name: Test e2e
        run: yarn test-e2e
        working-directory: client

